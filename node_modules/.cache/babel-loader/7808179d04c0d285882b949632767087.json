{"ast":null,"code":"import _objectSpread from\"/home/businka/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useContext}from\"react\";import{useParams}from\"react-router\";import{WorkPage}from\"./work-page\";import{projectsConfig}from\"./projects-config\";import{PreloaderStore}from\"../../store/preloader-store\";import{usePreloader}from\"../../hooks/use-preloading\";import{jsx as _jsx}from\"react/jsx-runtime\";export var WorksPageSelector=function WorksPageSelector(){var params=useParams();var projectData=projectsConfig[params.id];var _useContext=useContext(PreloaderStore),dispatch=_useContext.dispatch;usePreloader(dispatch);if(!projectData)return null;return/*#__PURE__*/_jsx(WorkPage,_objectSpread({},projectData));};","map":{"version":3,"sources":["/home/businka/Рабочий стол/portfolio/portfolio/src/pages/works-page-selector/index.tsx"],"names":["React","useContext","useParams","WorkPage","projectsConfig","PreloaderStore","usePreloader","WorksPageSelector","params","projectData","id","dispatch"],"mappings":"0LAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA,OAAQC,SAAR,KAAwB,cAAxB,CACA,OAAQC,QAAR,KAAuB,aAAvB,CAEA,OAAQC,cAAR,KAA6B,mBAA7B,CACA,OAAQC,cAAR,KAA6B,6BAA7B,CACA,OAAQC,YAAR,KAA2B,4BAA3B,C,2CAGA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACnC,GAAMC,CAAAA,MAAoB,CAAGN,SAAS,EAAtC,CACA,GAAMO,CAAAA,WAAW,CAAGL,cAAc,CAACI,MAAM,CAACE,EAAR,CAAlC,CACA,gBAAmBT,UAAU,CAACI,cAAD,CAA7B,CAAOM,QAAP,aAAOA,QAAP,CACAL,YAAY,CAACK,QAAD,CAAZ,CAGA,GAAG,CAACF,WAAJ,CAAiB,MAAO,KAAP,CACjB,mBAAO,KAAC,QAAD,kBAAcA,WAAd,EAAP,CACH,CATM","sourcesContent":["import React, {useContext} from \"react\";\nimport {useParams} from \"react-router\";\nimport {WorkPage} from \"./work-page\";\nimport {Routes} from \"../../routes\";\nimport {projectsConfig} from \"./projects-config\";\nimport {PreloaderStore} from \"../../store/preloader-store\";\nimport {usePreloader} from \"../../hooks/use-preloading\";\n\n\nexport const WorksPageSelector = () => {\n    const params: {id: Routes} = useParams();\n    const projectData = projectsConfig[params.id];\n    const {dispatch} = useContext(PreloaderStore);\n    usePreloader(dispatch);\n\n\n    if(!projectData) return null;\n    return <WorkPage {...projectData}/>\n}\n\nexport interface IWorkPage {\n    projectTitle: string;\n    projectDescription: string;\n    slides: string[];\n    technologiesTitle: string;\n    technologiesList: string[];\n    contributionsToProjectList: string[];\n    projectLink?: string;\n}"]},"metadata":{},"sourceType":"module"}