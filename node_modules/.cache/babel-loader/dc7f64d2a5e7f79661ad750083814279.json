{"ast":null,"code":"import _slicedToArray from\"/home/businka/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _classCallCheck from\"/home/businka/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/businka/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";import React,{useEffect,useRef,useState}from\"react\";import style from'./self-writing-text.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TextIterationHandler=/*#__PURE__*/function(){function TextIterationHandler(){_classCallCheck(this,TextIterationHandler);this.count=0;this.currentText='';this.stopWriteFlag=false;}_createClass(TextIterationHandler,[{key:\"setCount\",set:function set(arg){this.count=arg;}},{key:\"setCurrentText\",set:function set(arg){this.currentText=arg;}},{key:\"setStopWriteFlag\",set:function set(arg){this.stopWriteFlag=arg;}}]);return TextIterationHandler;}();export var SelfWritingText=function SelfWritingText(_ref){var arrayOfStrings=_ref.arrayOfStrings;var _useState=useState(new TextIterationHandler()),_useState2=_slicedToArray(_useState,1),textIterationInstance=_useState2[0];var parentToInsert=useRef(null);var timeOutRef=useRef(0);var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),text=_useState4[0],setText=_useState4[1];useEffect(function(){if(parentToInsert.current){writeText(arrayOfStrings);}},[parentToInsert.current]);useEffect(function(){return function(){return clearTimeout(timeOutRef.current);};},[]);var deleteLatestText=function deleteLatestText(text){clearTimeout(timeOutRef.current);var replacedString=text.replace(/.$/,\"\");if(text.length===0){textIterationInstance.setCount=textIterationInstance.count+1;textIterationInstance.setStopWriteFlag=false;writeText(arrayOfStrings);return;}timeOutRef.current=window.setTimeout(function(){setText(replacedString);clearTimeout(timeOutRef.current);deleteLatestText(replacedString);},50);};var writeText=function writeText(arr){var parent=parentToInsert.current;if(!parent)return;if(!textIterationInstance.stopWriteFlag){textIterationInstance.setCurrentText=arr[textIterationInstance.count];// ставлю текущую стрингу из массива\ntextIterationInstance.setStopWriteFlag=true;}if(textIterationInstance.count===arr.length){clearTimeout(timeOutRef.current);textIterationInstance.setCount=0;textIterationInstance.setStopWriteFlag=false;writeText(arr);return;}if(textIterationInstance.currentText.length===0){timeOutRef.current=window.setTimeout(function(){deleteLatestText(arr[textIterationInstance.count]);},3000);return;}timeOutRef.current=window.setTimeout(function(){setText(function(prevState){prevState+=textIterationInstance.currentText[0];return prevState;});textIterationInstance.setCurrentText=textIterationInstance.currentText.slice(1);clearTimeout(timeOutRef.current);writeText(arr);},100);};return/*#__PURE__*/_jsxs(\"p\",{className:style.added_span,ref:parentToInsert,children:[/*#__PURE__*/_jsx(\"span\",{children:text}),/*#__PURE__*/_jsx(\"span\",{className:style.line+' '+'anim_span',children:\"|\"})]});};","map":{"version":3,"sources":["/home/businka/Рабочий стол/portfolio/portfolio/src/components/self-writing-text/index.tsx"],"names":["React","useEffect","useRef","useState","style","TextIterationHandler","count","currentText","stopWriteFlag","arg","SelfWritingText","arrayOfStrings","textIterationInstance","parentToInsert","timeOutRef","text","setText","current","writeText","clearTimeout","deleteLatestText","replacedString","replace","length","setCount","setStopWriteFlag","window","setTimeout","arr","parent","setCurrentText","prevState","slice","added_span","line"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport style from './self-writing-text.module.scss';\n\n\n\n\n class TextIterationHandler {\n        count = 0;\n        currentText = '';\n        stopWriteFlag = false;\n\n        set setCount(arg: number) {\n                this.count = arg;\n        }\n        set setCurrentText(arg: string) {\n                this.currentText = arg;\n        }\n        set setStopWriteFlag(arg: boolean) {\n                this.stopWriteFlag = arg;\n        }\n\n}\n\nexport const SelfWritingText: React.FC<{arrayOfStrings: string[]}> =\n    ({arrayOfStrings}) => {\n        const [textIterationInstance] = useState(new TextIterationHandler());\n        const parentToInsert = useRef<HTMLParagraphElement | null>(null);\n        const timeOutRef = useRef(0);\n        const [text, setText] = useState<string>('');\n        useEffect(() => {\n                if(parentToInsert.current) {\n                        writeText(arrayOfStrings);\n                }\n        }, [parentToInsert.current]);\n\n        useEffect(() => {\n                return () => clearTimeout(timeOutRef.current);\n        }, [])\n\n\n        const deleteLatestText = (text: string) => {\n                clearTimeout(timeOutRef.current);\n                const replacedString = text.replace(/.$/,\"\");\n                if(text.length === 0) {\n                        textIterationInstance.setCount = textIterationInstance.count + 1;\n                        textIterationInstance.setStopWriteFlag = false;\n                        writeText(arrayOfStrings);\n                        return\n                }\n                timeOutRef.current = window.setTimeout(() => {\n                        setText(replacedString);\n                        clearTimeout(timeOutRef.current);\n                        deleteLatestText(replacedString);\n                }, 50)\n        }\n        \n\n        \n        const writeText = (arr: string[]) => {\n                const parent = parentToInsert.current;\n\n                if(!parent) return;\n                if (!textIterationInstance.stopWriteFlag) {\n                        textIterationInstance.setCurrentText = arr[textIterationInstance.count]; // ставлю текущую стрингу из массива\n                        textIterationInstance.setStopWriteFlag = true;\n                }\n                if(textIterationInstance.count ===  arr.length) {\n                        clearTimeout(timeOutRef.current);\n                        textIterationInstance.setCount = 0;\n                        textIterationInstance.setStopWriteFlag = false;\n                        writeText(arr);\n                        return;\n                }\n\n                if(textIterationInstance.currentText.length === 0) {\n                        timeOutRef.current = window.setTimeout(() => {\n                                deleteLatestText(arr[textIterationInstance.count]);\n                        }, 3000)\n                        return;\n                }\n\n                timeOutRef.current = window.setTimeout(() => {\n                        setText(prevState => {\n                                prevState += textIterationInstance.currentText[0];\n                                return prevState\n                        });\n                        textIterationInstance.setCurrentText = textIterationInstance.currentText.slice(1)\n                        clearTimeout(timeOutRef.current);\n                        writeText(arr)\n                }, 100)\n\n\n        }\n        \n        \n        return <p className={style.added_span} ref={parentToInsert}><span>{text}</span><span className={style.line + ' ' + 'anim_span'}>|</span></p>\n}"]},"metadata":{},"sourceType":"module"}